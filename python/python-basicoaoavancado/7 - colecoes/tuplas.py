# -*- coding: utf-8 -*-
"""tuplas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VMZA34CLuq3VgJUGeKQXyAvPz25vB6qI
"""

'''
Diferentemente das listas, tuplas são REPRESENTADAS () e são imutáveis, ela não muda.
                                      Separadas por virgulas, como na tupla4
                                                             Toda operação em tupla cria uma nova tupla
                                                             Aceita todo tipo de dado e repetição como lista

Quando não precisa modificar os dados contidos
  Meses..

Mais rápida que lista
Mais seguro pois tem elementos imutáveis
'''

tupla1 = (1,2,3,4,5,6)
print(type(tupla1))

tupla2 = 1,2,3,4,5,6
print(type(tupla2))

tupla3 = (3) #uma tupla de um só elemento não é assim
print(type(tupla3))

tupla4 = (4,) #uma tupla de um só elemento é assim
print(type(tupla4))

#por range
tupla5 = tuple(range(0,11))
print(tupla5)

#por string
escola = tuple("LUCAS KAMINSKI")
print(escola)

#não existe drop ou append
#existe sum(), max(), min() se os valores forem inteiro ou reais
#len() todos

print(sum(tupla5))
print(max(tupla5))
print(min(tupla5))
print(len(tupla5))

#concatenando
tupla10 = ("a", 1,2,3, 4)
tupla11 = (1,2,3)

print(tupla10 + tupla11) #junta valores

#verificação
print(3 in tupla10)

for n in tupla10:
  print(n)

for n, i in enumerate(tupla10):
  print(n,i)

print(tupla10.index("a"))

#contas
print(tupla10.count("a"))


tupla10[0], tupla10[-1]

#slice [inicio:fim:passo]
tupla10[2:5]

#não tem shalow copy

tupla = (1,2,3)

nova = tupla

print(nova, tupla)

outra = (4,5,6)
nova += outra

print(tupla, nova)